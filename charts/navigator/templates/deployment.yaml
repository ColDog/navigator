apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "navigator.fullname" . }}
  labels:
    app: {{ template "navigator.name" . }}
    chart: {{ template "navigator.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "navigator.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "navigator.name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/kubeconfig-secret: {{ include (print $.Template.BasePath "/kubeconfigssecret.yaml") . | sha256sum }}
        checksum/creds-secret: {{ include (print $.Template.BasePath "/credssecret.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ template "navigator.fullname" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.Version .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 4000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: http
          env:
            - name: NODE_ENV
              value: production
            - name: KUBECONFIG
              value: "{{ range $key, $val := .Values.kubeconfigs }}/etc/kubeconfig/{{ $key }}:{{ end }}/etc/kubeconfig/config"
            - name: PORT
              value: "4000"
            - name: DATABASE_DRIVER
              value: {{ .Values.db.driver | quote }}
            - name: DATABASE_USER
              value: {{ .Values.db.user | quote }}
            - name: DATABASE_HOST
              value: {{ .Values.db.host | quote }}
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.db.secret | quote }}
                  key: postgresql-password
            - name: DEFAULT_SERVICE_ACCOUNT
              value: {{ .Values.defaultServiceAccount | quote }}
            - name: AUTH_DISABLED
              value: {{ .Values.auth.disabled | quote }}
            - name: PROXY_AUTH
              value: {{ .Values.auth.proxy.enabled | quote }}
            - name: PROXY_AUTH_HEADER
              value: {{ .Values.auth.proxy.header | quote }}
            - name: API_AUTH
              value: {{ .Values.auth.api.enabled | quote }}
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "navigator.fullname" . }}-creds
                  key: apiKey
            - name: JWT_AUTH
              value: {{ .Values.auth.jwt.enabled | quote }}
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "navigator.fullname" . }}-creds
                  key: jwtSecret
            - name: BASIC_AUTH
              value: {{ .Values.auth.basic.enabled | quote }}
            - name: BASIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "navigator.fullname" . }}-creds
                  key: basicPassword
          volumeMounts:
          - name: kubeconfigs
            mountPath: "/etc/ro/kubeconfig"
            readOnly: true
        {{- with .Values.resources }}
          resources:
{{ toYaml . | indent 12 }}
        {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
      - name: kubeconfigs
        secret:
          secretName: {{ template "navigator.fullname" . }}-kubeconfigs
